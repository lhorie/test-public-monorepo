{"version":3,"file":"node.js","sources":["../src/plugin.js","../src/hoc.js","../src/__tests__/index.node.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nimport type {\n  UniversalEventsDepsType,\n  UniversalEventsType,\n} from 'fusion-plugin-universal-events';\n\nimport UniversalEvents from 'fusion-plugin-universal-events';\nimport {ProviderPlugin} from 'fusion-react';\n\nexport default ProviderPlugin.create<\n  UniversalEventsDepsType,\n  UniversalEventsType\n>('universalEvents', UniversalEvents);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {ProvidedHOC} from 'fusion-react';\n\nexport default ProvidedHOC.create('universalEvents');\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react';\nimport test from 'tape-cup';\nimport App from 'fusion-react';\nimport {getSimulator} from 'fusion-test-utils';\nimport plugin, {withBatchEvents, UniversalEventsToken} from '../index.js';\n\ntest('test plugin', async t => {\n  let called = false;\n  const Root = withBatchEvents(props => {\n    const {universalEvents} = props;\n    t.equal(typeof universalEvents.on, 'function');\n    t.equal(typeof universalEvents.emit, 'function');\n    universalEvents.emit('test', {hello: 'world'});\n    return React.createElement('div', null, 'Hello World');\n  });\n  const app = new App(React.createElement(Root));\n  app.register(UniversalEventsToken, plugin);\n  app.middleware({events: UniversalEventsToken}, ({events}) => {\n    events.on('test', p => {\n      t.deepLooseEqual(p, {hello: 'world'});\n      called = true;\n    });\n    return (ctx, next) => {\n      return next();\n    };\n  });\n  const sim = getSimulator(app);\n  await sim.render('/');\n  t.ok(called);\n  t.end();\n});\n"],"names":["ProviderPlugin","create","UniversalEvents","ProvidedHOC","test","t","called","Root","withBatchEvents","props","universalEvents","equal","on","emit","hello","React","createElement","app","App","register","UniversalEventsToken","plugin","middleware","events","p","deepLooseEqual","ctx","next","sim","getSimulator","render","ok","end"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,AAGA,aAAeA,kBAAc,CAACC,MAAf,CAGb,iBAHa,EAGMC,wBAHN,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA,AAEA,sBAAeC,eAAW,CAACF,MAAZ,CAAmB,iBAAnB,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;;;;;;;AAQA,AAMAG,IAAI,CAAC,aAAD,EAAgB,MAAMC,CAAN,IAAW;MACzBC,MAAM,GAAG,KAAb;QACMC,IAAI,GAAGC,eAAe,CAACC,KAAK,IAAI;UAC9B;MAACC;QAAmBD,KAA1B;IACAJ,CAAC,CAACM,KAAF,CAAQ,OAAOD,eAAe,CAACE,EAA/B,EAAmC,UAAnC;IACAP,CAAC,CAACM,KAAF,CAAQ,OAAOD,eAAe,CAACG,IAA/B,EAAqC,UAArC;IACAH,eAAe,CAACG,IAAhB,CAAqB,MAArB,EAA6B;MAACC,KAAK,EAAE;KAArC;WACOC,KAAK,CAACC,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EAAiC,aAAjC,CAAP;GAL0B,CAA5B;QAOMC,GAAG,GAAG,IAAIC,YAAJ,CAAQH,KAAK,CAACC,aAAN,CAAoBT,IAApB,CAAR,CAAZ;EACAU,GAAG,CAACE,QAAJ,CAAaC,oCAAb,EAAmCC,MAAnC;EACAJ,GAAG,CAACK,UAAJ,CAAe;IAACC,MAAM,EAAEH;GAAxB,EAA+C,CAAC;IAACG;GAAF,KAAc;IAC3DA,MAAM,CAACX,EAAP,CAAU,MAAV,EAAkBY,CAAC,IAAI;MACrBnB,CAAC,CAACoB,cAAF,CAAiBD,CAAjB,EAAoB;QAACV,KAAK,EAAE;OAA5B;MACAR,MAAM,GAAG,IAAT;KAFF;WAIO,CAACoB,GAAD,EAAMC,IAAN,KAAe;aACbA,IAAI,EAAX;KADF;GALF;QASMC,GAAG,GAAGC,4BAAY,CAACZ,GAAD,CAAxB;QACMW,GAAG,CAACE,MAAJ,CAAW,GAAX,CAAN;EACAzB,CAAC,CAAC0B,EAAF,CAAKzB,MAAL;EACAD,CAAC,CAAC2B,GAAF;CAvBE,CAAJ"}