{"version":3,"file":"node.js","sources":["../src/tokens.js","../src/server.js","../src/__tests__/index.node.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {$winstonLoggerConfig} from 'winston';\n\nimport {createToken} from 'fusion-core';\nimport type {Token} from 'fusion-core';\n\nexport const UniversalLoggerConfigToken: Token<\n  $winstonLoggerConfig<*>\n> = createToken('UniversalLoggerConfigToken');\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env node */\n\nimport {createLogger} from 'winston';\n\nimport {createPlugin} from 'fusion-core';\nimport {UniversalEventsToken} from 'fusion-plugin-universal-events';\n\nimport {UniversalLoggerConfigToken} from './tokens.js';\nimport type {UniversalLoggerPluginType} from './types.js';\n\nconst plugin =\n  __NODE__ &&\n  createPlugin({\n    deps: {\n      emitter: UniversalEventsToken,\n      config: UniversalLoggerConfigToken.optional,\n    },\n    provides: ({emitter, config}) => {\n      config = config || {};\n      const logger = createLogger(config);\n      emitter.on('universal-log', ({level, args}) => {\n        logger[level](...args);\n      });\n      class UniversalLogger {}\n      for (const key in logger) {\n        if (typeof logger[key] === 'function') {\n          // $FlowFixMe\n          UniversalLogger.prototype[key] = (...args) =>\n            emitter.emit('universal-log', {args, level: key, source: 'server'});\n        }\n      }\n      return new UniversalLogger();\n    },\n  });\n\nexport default ((plugin: any): UniversalLoggerPluginType);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport test from 'tape-cup';\n\nimport {getSimulator} from 'fusion-test-utils';\nimport App from 'fusion-core';\nimport {LoggerToken} from 'fusion-tokens';\nimport UniversalEvents, {\n  UniversalEventsToken,\n} from 'fusion-plugin-universal-events';\nimport TransportStream from 'winston-transport';\n\nimport plugin from '../server.js';\nimport {UniversalLoggerConfigToken} from '../tokens';\n\ntype SupportedLevelsType =\n  | 'error'\n  | 'warn'\n  | 'info'\n  | 'verbose'\n  | 'debug'\n  | 'silly';\n\ntest('Server logger', async t => {\n  t.plan(4);\n  class Transport extends TransportStream {\n    name: string;\n\n    constructor() {\n      super();\n      this.name = 'test-transport';\n    }\n    log({level, message}: {level: SupportedLevelsType, message: string}): void {\n      t.equals(level, 'info', 'level is ok');\n      t.equals(message, 'test message', 'message is ok');\n    }\n  }\n\n  const app = new App('element', el => el);\n  app.register(UniversalEventsToken, UniversalEvents);\n  app.register(LoggerToken, plugin);\n  app.register(UniversalLoggerConfigToken, {transports: [new Transport()]});\n  app.middleware(\n    {events: UniversalEventsToken, logger: LoggerToken},\n    ({events, logger}) => {\n      events.on('universal-log', ({args, level}) => {\n        t.equals(\n          args[0],\n          'test message',\n          'all logs are passed through event emitter'\n        );\n      });\n\n      t.ok(logger);\n      logger.info('test message');\n      return (ctx, next) => next();\n    }\n  );\n  getSimulator(app);\n});\n\ntest('Server logger listening on events', async t => {\n  let called = false;\n  class Transport extends TransportStream {\n    name: string;\n\n    constructor() {\n      super();\n      this.name = 'test-transport';\n    }\n    log({\n      level,\n      message,\n      hello,\n    }: {\n      level: SupportedLevelsType,\n      message: string,\n      hello: string,\n    }) {\n      t.equals(level, 'info', 'level is ok');\n      t.equals(message, 'test', 'message is ok');\n      t.equals(message, 'test', 'message is ok');\n      t.equals(hello, 'world', 'meta is ok');\n      called = true;\n    }\n  }\n  const app = new App('element', el => el);\n  app.register(UniversalEventsToken, UniversalEvents);\n  app.register(LoggerToken, plugin);\n  app.register(UniversalLoggerConfigToken, {transports: [new Transport()]});\n  app.middleware({events: UniversalEventsToken}, ({events}) => {\n    events.emit('universal-log', {\n      level: 'info',\n      args: ['test', {hello: 'world'}],\n    });\n    return (ctx, next) => next();\n  });\n  getSimulator(app);\n  t.equals(called, true, 'called');\n  t.end();\n});\n"],"names":["UniversalLoggerConfigToken","createToken","plugin","createPlugin","deps","emitter","UniversalEventsToken","config","optional","provides","logger","createLogger","on","level","args","UniversalLogger","key","prototype","emit","source","test","t","plan","Transport","TransportStream","constructor","name","log","message","equals","app","App","el","register","UniversalEvents","LoggerToken","transports","middleware","events","ok","info","ctx","next","getSimulator","called","hello","end"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,AAGO,MAAMA,0BAEZ,2BAAGC,eAAW,CAAC,4BAAD,CAAd,CAFM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHP,AAQA,MAAMC,MAAM,2BACV,+DACAC,gBAAY,CAAC;EACXC,IAAI,EAAE;IACJC,OAAO,EAAEC,oCADL;IAEJC,MAAM,EAAEP,0BAA0B,CAACQ;GAH1B;EAKXC,QAAQ,EAAE,CAAC;IAACJ,OAAD;IAAUE;GAAX,KAAuB;;;IAC/BA,MAAM,GAAG,2BAAAA,MAAM,gCAAI,EAAJ,CAAf;UACMG,MAAM,2BAAGC,oBAAY,CAACJ,MAAD,CAAf,CAAZ;;IACAF,OAAO,CAACO,EAAR,CAAW,eAAX,EAA4B,CAAC;MAACC,KAAD;MAAQC;KAAT,KAAmB;;;MAC7CJ,MAAM,CAACG,KAAD,CAAN,CAAc,GAAGC,IAAjB;KADF;;UAGMC,eAAN,CAAsB;;;;SACjB,MAAMC,GAAX,IAAkBN,MAAlB,EAA0B;;;UACpB,OAAOA,MAAM,CAACM,GAAD,CAAb,KAAuB,UAA3B,EAAuC;;;;;QAErCD,eAAe,CAACE,SAAhB,CAA0BD,GAA1B,IAAiC,CAAC,GAAGF,IAAJ,KAC/B;;;iBAAAT,OAAO,CAACa,IAAR,CAAa,eAAb,EAA8B;YAACJ,IAAD;YAAOD,KAAK,EAAEG,GAAd;YAAmBG,MAAM,EAAE;WAAzD;SADF;OAFF;;;;;;WAMK,IAAIJ,eAAJ,EAAP;;CAnBQ,CADZ,CADU,CAAZ;;AClBA;;;;;;;AAQA,AAqBAK,IAAI,CAAC,eAAD,EAAkB,MAAMC,CAAN,IAAW;EAC/BA,CAAC,CAACC,IAAF,CAAO,CAAP;;QACMC,SAAN,SAAwBC,eAAxB,CAAwC;IAGtCC,WAAW,GAAG;;WAEPC,IAAL,GAAY,gBAAZ;;;IAEFC,GAAG,CAAC;MAACd,KAAD;MAAQe;KAAT,EAAwE;MACzEP,CAAC,CAACQ,MAAF,CAAShB,KAAT,EAAgB,MAAhB,EAAwB,aAAxB;MACAQ,CAAC,CAACQ,MAAF,CAASD,OAAT,EAAkB,cAAlB,EAAkC,eAAlC;;;;;QAIEE,GAAG,GAAG,IAAIC,YAAJ,CAAQ,SAAR,EAAmBC,EAAE,IAAIA,EAAzB,CAAZ;EACAF,GAAG,CAACG,QAAJ,CAAa3B,oCAAb,EAAmC4B,wBAAnC;EACAJ,GAAG,CAACG,QAAJ,CAAaE,wBAAb,EAA0BjC,MAA1B;EACA4B,GAAG,CAACG,QAAJ,CAAajC,0BAAb,EAAyC;IAACoC,UAAU,EAAE,CAAC,IAAIb,SAAJ,EAAD;GAAtD;EACAO,GAAG,CAACO,UAAJ,CACE;IAACC,MAAM,EAAEhC,oCAAT;IAA+BI,MAAM,EAAEyB;GADzC,EAEE,CAAC;IAACG,MAAD;IAAS5B;GAAV,KAAsB;IACpB4B,MAAM,CAAC1B,EAAP,CAAU,eAAV,EAA2B,CAAC;MAACE,IAAD;MAAOD;KAAR,KAAmB;MAC5CQ,CAAC,CAACQ,MAAF,CACEf,IAAI,CAAC,CAAD,CADN,EAEE,cAFF,EAGE,2CAHF;KADF;IAQAO,CAAC,CAACkB,EAAF,CAAK7B,MAAL;IACAA,MAAM,CAAC8B,IAAP,CAAY,cAAZ;WACO,CAACC,GAAD,EAAMC,IAAN,KAAeA,IAAI,EAA1B;GAbJ;EAgBAC,4BAAY,CAACb,GAAD,CAAZ;CAnCE,CAAJ;AAsCAV,IAAI,CAAC,mCAAD,EAAsC,MAAMC,CAAN,IAAW;MAC/CuB,MAAM,GAAG,KAAb;;QACMrB,SAAN,SAAwBC,eAAxB,CAAwC;IAGtCC,WAAW,GAAG;;WAEPC,IAAL,GAAY,gBAAZ;;;IAEFC,GAAG,CAAC;MACFd,KADE;MAEFe,OAFE;MAGFiB;KAHC,EAQA;MACDxB,CAAC,CAACQ,MAAF,CAAShB,KAAT,EAAgB,MAAhB,EAAwB,aAAxB;MACAQ,CAAC,CAACQ,MAAF,CAASD,OAAT,EAAkB,MAAlB,EAA0B,eAA1B;MACAP,CAAC,CAACQ,MAAF,CAASD,OAAT,EAAkB,MAAlB,EAA0B,eAA1B;MACAP,CAAC,CAACQ,MAAF,CAASgB,KAAT,EAAgB,OAAhB,EAAyB,YAAzB;MACAD,MAAM,GAAG,IAAT;;;;;QAGEd,GAAG,GAAG,IAAIC,YAAJ,CAAQ,SAAR,EAAmBC,EAAE,IAAIA,EAAzB,CAAZ;EACAF,GAAG,CAACG,QAAJ,CAAa3B,oCAAb,EAAmC4B,wBAAnC;EACAJ,GAAG,CAACG,QAAJ,CAAaE,wBAAb,EAA0BjC,MAA1B;EACA4B,GAAG,CAACG,QAAJ,CAAajC,0BAAb,EAAyC;IAACoC,UAAU,EAAE,CAAC,IAAIb,SAAJ,EAAD;GAAtD;EACAO,GAAG,CAACO,UAAJ,CAAe;IAACC,MAAM,EAAEhC;GAAxB,EAA+C,CAAC;IAACgC;GAAF,KAAc;IAC3DA,MAAM,CAACpB,IAAP,CAAY,eAAZ,EAA6B;MAC3BL,KAAK,EAAE,MADoB;MAE3BC,IAAI,EAAE,CAAC,MAAD,EAAS;QAAC+B,KAAK,EAAE;OAAjB;KAFR;WAIO,CAACJ,GAAD,EAAMC,IAAN,KAAeA,IAAI,EAA1B;GALF;EAOAC,4BAAY,CAACb,GAAD,CAAZ;EACAT,CAAC,CAACQ,MAAF,CAASe,MAAT,EAAiB,IAAjB,EAAuB,QAAvB;EACAvB,CAAC,CAACyB,GAAF;CAtCE,CAAJ"}