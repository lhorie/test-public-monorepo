{"version":3,"file":"node.js","sources":["../src/tokens.js","../src/missing-handler-error.js","../src/response-error.js","../src/server.js","../src/mock.js","../src/__tests__/index.node.js","../src/__tests__/test-mock.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {createToken} from 'fusion-core';\nimport type {Token} from 'fusion-core';\n\nexport const RPCToken: Token<any> = createToken('RPCToken');\n\nexport type HandlerType = {[string]: (...args: any) => any};\nexport const RPCHandlersToken: Token<HandlerType> = createToken(\n  'RPCHandlersToken'\n);\nexport const BodyParserOptionsToken: Token<mixed> = createToken(\n  'BodyParserOptionsToken'\n);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport default class MissingHandlerError extends Error {\n  code: ?string;\n\n  constructor(method: string) {\n    super(`Missing RPC handler for ${method}`);\n    this.code = 'ERR_MISSING_HANDLER';\n    Error.captureStackTrace(this, MissingHandlerError);\n  }\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport default class ResponseError extends Error {\n  code: ?string;\n  meta: ?Object;\n\n  constructor(message: string) {\n    super(message);\n    this.code = null;\n    this.meta = null;\n    Error.captureStackTrace(this, ResponseError);\n  }\n}\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env node */\n\nimport bodyparser from 'koa-bodyparser';\n\nimport {createPlugin, memoize} from 'fusion-core';\nimport type {Context} from 'fusion-core';\nimport {UniversalEventsToken} from 'fusion-plugin-universal-events';\nimport type {Fetch} from 'fusion-tokens';\n\nimport MissingHandlerError from './missing-handler-error';\nimport ResponseError from './response-error';\nimport {BodyParserOptionsToken, RPCHandlersToken} from './tokens.js';\nimport type {HandlerType} from './tokens.js';\nimport type {RPCPluginType, IEmitter} from './types.js';\n\nconst statKey = 'rpc:method';\n\n/* Helper function */\nfunction hasHandler(handlers: HandlerType, method: string): boolean {\n  return handlers.hasOwnProperty(method);\n}\n\nclass RPC {\n  ctx: ?Context;\n  emitter: ?IEmitter;\n  handlers: ?HandlerType;\n  fetch: ?Fetch;\n\n  constructor(emitter: any, handlers: any, ctx: Context): RPC {\n    if (!ctx || !ctx.headers) {\n      throw new Error('fusion-plugin-rpc requires `ctx`');\n    }\n    this.ctx = ctx;\n    this.emitter = emitter;\n    this.handlers = handlers;\n\n    return this;\n  }\n\n  async request<TArgs, TResult>(method: string, args: TArgs): Promise<TResult> {\n    const startTime = ms();\n\n    if (!this.ctx) {\n      throw new Error('fusion-plugin-rpc requires `ctx`');\n    }\n    if (!this.emitter) {\n      throw new Error('fusion-plugin-rpc requires `emitter`');\n    }\n    const scopedEmitter = this.emitter.from(this.ctx);\n\n    if (!this.handlers) {\n      throw new Error('fusion-plugin-rpc requires `handlers`');\n    }\n    if (!hasHandler(this.handlers, method)) {\n      const e = new MissingHandlerError(method);\n      if (scopedEmitter) {\n        scopedEmitter.emit('rpc:error', {\n          method,\n          origin: 'server',\n          error: e,\n        });\n      }\n      throw e;\n    }\n    try {\n      const result = await this.handlers[method](args, this.ctx);\n      if (scopedEmitter) {\n        scopedEmitter.emit(statKey, {\n          method,\n          status: 'success',\n          origin: 'server',\n          timing: ms() - startTime,\n        });\n      }\n      return result;\n    } catch (e) {\n      if (scopedEmitter) {\n        scopedEmitter.emit(statKey, {\n          method,\n          error: e,\n          status: 'failure',\n          origin: 'server',\n          timing: ms() - startTime,\n        });\n      }\n      throw e;\n    }\n  }\n}\n\nconst pluginFactory: () => RPCPluginType = () =>\n  createPlugin({\n    deps: {\n      emitter: UniversalEventsToken,\n      handlers: RPCHandlersToken,\n      bodyParserOptions: BodyParserOptionsToken.optional,\n    },\n\n    provides: deps => {\n      const {emitter, handlers} = deps;\n\n      const service = {\n        from: memoize(ctx => new RPC(emitter, handlers, ctx)),\n      };\n      return service;\n    },\n\n    middleware: deps => {\n      const {emitter, handlers, bodyParserOptions} = deps;\n      if (!handlers)\n        throw new Error('Missing handlers registered to RPCHandlersToken');\n      if (!emitter)\n        throw new Error('Missing emitter registered to UniversalEventsToken');\n      const parseBody = bodyparser(bodyParserOptions);\n\n      return async (ctx, next) => {\n        await next();\n        const scopedEmitter = emitter.from(ctx);\n        if (ctx.method === 'POST' && ctx.path.startsWith('/api/')) {\n          const startTime = ms();\n          const [, method] = ctx.path.match(/\\/api\\/([^/]+)/i) || [];\n          if (hasHandler(handlers, method)) {\n            await parseBody(ctx, () => Promise.resolve());\n            try {\n              const result = await handlers[method](ctx.request.body, ctx);\n              ctx.body = {\n                status: 'success',\n                data: result,\n              };\n              if (scopedEmitter) {\n                scopedEmitter.emit(statKey, {\n                  method,\n                  status: 'success',\n                  origin: 'browser',\n                  timing: ms() - startTime,\n                });\n              }\n            } catch (e) {\n              const error =\n                e instanceof ResponseError\n                  ? e\n                  : new Error(\n                      'UnknownError - Use ResponseError for more detailed error messages'\n                    );\n              ctx.body = {\n                status: 'failure',\n                data: {\n                  message: error.message,\n                  // $FlowFixMe\n                  code: error.code,\n                  // $FlowFixMe\n                  meta: error.meta,\n                },\n              };\n              if (scopedEmitter) {\n                scopedEmitter.emit(statKey, {\n                  method,\n                  error: e,\n                  status: 'failure',\n                  origin: 'browser',\n                  timing: ms() - startTime,\n                });\n              }\n            }\n          } else {\n            const e = new MissingHandlerError(method);\n            ctx.body = {\n              status: 'failure',\n              data: {\n                message: e.message,\n                code: e.code,\n              },\n            };\n            ctx.status = 404;\n            if (scopedEmitter) {\n              scopedEmitter.emit('rpc:error', {\n                origin: 'browser',\n                method,\n                error: e,\n              });\n            }\n          }\n        }\n      };\n    },\n  });\n\n/* Helper functions */\nfunction ms() {\n  const [seconds, ns] = process.hrtime();\n  return Math.round(seconds * 1000 + ns / 1e6);\n}\n\nexport default ((__NODE__ && pluginFactory(): any): RPCPluginType);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {createPlugin} from 'fusion-core';\nimport type {Context} from 'fusion-core';\nimport type {Fetch} from 'fusion-tokens';\n\nimport MissingHandlerError from './missing-handler-error';\nimport {RPCHandlersToken} from './tokens';\nimport type {HandlerType} from './tokens.js';\nimport type {RPCPluginType, IEmitter} from './types.js';\n\nclass RPC {\n  ctx: ?Context;\n  emitter: ?IEmitter;\n  handlers: ?HandlerType;\n  fetch: ?Fetch;\n\n  constructor(handlers: any) {\n    this.handlers = handlers;\n  }\n\n  async request<TArgs, TResult>(method: string, args: TArgs): Promise<TResult> {\n    if (!this.handlers) {\n      throw new Error('fusion-plugin-rpc requires `handlers`');\n    }\n\n    if (!this.handlers[method]) {\n      throw new MissingHandlerError(method);\n    }\n    return this.handlers[method](args);\n  }\n}\n\nconst plugin: RPCPluginType = createPlugin({\n  deps: {\n    handlers: RPCHandlersToken,\n  },\n  provides: ({handlers} = {}) => {\n    return {from: () => new RPC(handlers)};\n  },\n});\n\nexport default plugin;\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport test from 'tape-cup';\nimport MockEmitter from 'events';\nimport MockReq from 'mock-req';\n\nimport App, {createPlugin, createToken} from 'fusion-core';\nimport type {Context, Token} from 'fusion-core';\nimport {getSimulator, getService} from 'fusion-test-utils';\nimport {UniversalEventsToken} from 'fusion-plugin-universal-events';\n\nimport {RPCHandlersToken} from '../tokens';\nimport RPCPlugin from '../server';\nimport type {IEmitter, RPCServiceType} from '../types.js';\nimport MockRPCPlugin from '../mock.js';\nimport ResponseError from '../response-error.js';\n\nconst MockPluginToken: Token<RPCServiceType> = createToken('test-plugin-token');\nconst MOCK_JSON_PARAMS = {test: 'test-args'};\n\nconst mockService: RPCServiceType = getService(() => {\n  const app = new App('content', el => el);\n  app.register(RPCHandlersToken, {});\n  return app;\n}, MockRPCPlugin);\n\n/* Test fixtures */\nfunction createTestFixture() {\n  const mockHandlers = {};\n  const mockEmitter: IEmitter = (new MockEmitter(): any);\n  // $FlowFixMe\n  mockEmitter.from = () => mockEmitter;\n  const mockEmitterPlugin = createPlugin({\n    provides: () => mockEmitter,\n  });\n\n  const app = new App('content', el => el);\n  app.register(UniversalEventsToken, mockEmitterPlugin);\n  app.register(RPCHandlersToken, mockHandlers);\n  app.register(MockPluginToken, RPCPlugin);\n  return app;\n}\n\nfunction createMockEmitter<TProps>(props: TProps): IEmitter {\n  const emitter = {\n    from: () => {\n      return emitter;\n    },\n    emit: () => {},\n    setFrequency: () => {},\n    teardown: () => {},\n    map: () => {},\n    on: () => {},\n    off: () => {},\n    mapEvent: () => {},\n    handleEvent: () => {},\n    flush: () => undefined,\n    ...props,\n  };\n  return emitter;\n}\n\nfunction mockRequest() {\n  const req = new MockReq({\n    method: 'POST',\n    url: '/api/test',\n    headers: {\n      Accept: 'text/plain',\n    },\n  });\n  req.write(MOCK_JSON_PARAMS);\n  req.end();\n\n  return req;\n}\n\ntest('FusionApp - service resolved', t => {\n  const app = createTestFixture();\n\n  let wasResolved = false;\n  getSimulator(\n    app,\n    createPlugin({\n      deps: {rpcFactory: MockPluginToken},\n      provides: ({rpcFactory}) => {\n        t.ok(rpcFactory);\n        wasResolved = true;\n      },\n    })\n  );\n  t.true(wasResolved, 'service was resolved');\n\n  t.end();\n});\n\ntest('service - requires ctx', t => {\n  const app = createTestFixture();\n\n  let wasResolved = false;\n  getSimulator(\n    app,\n    createPlugin({\n      deps: {rpcFactory: MockPluginToken},\n      provides: ({rpcFactory}) => {\n        // $FlowFixMe\n        t.throws(() => rpcFactory());\n        wasResolved = true;\n      },\n    })\n  );\n  t.true(wasResolved, 'service was resolved');\n\n  t.end();\n});\n\ntest('service - request api', async t => {\n  const mockCtx: Context = ({\n    headers: {},\n    memoized: new Map(),\n  }: any);\n  const mockHandlers = {\n    test(args, ctx) {\n      t.equal(args, 'test-args');\n      t.equal(ctx, mockCtx);\n      return 1;\n    },\n  };\n  const mockEmitter = createMockEmitter({\n    emit: (type: mixed, payload: Object) => {\n      t.equal(type, 'rpc:method');\n      t.equal(payload.method, 'test');\n      t.equal(payload.status, 'success');\n      t.equal(typeof payload.timing, 'number');\n    },\n    from() {\n      return this;\n    },\n  });\n\n  const appCreator = () => {\n    const app = new App('content', el => el);\n    app.register(UniversalEventsToken, mockEmitter);\n    app.register(RPCHandlersToken, mockHandlers);\n    return app;\n  };\n\n  const rpcFactory = getService(appCreator, RPCPlugin);\n  const rpc = rpcFactory.from(mockCtx);\n\n  t.equals(typeof rpc.request, 'function', 'has request method');\n  try {\n    const p = rpc.request('test', 'test-args');\n    t.ok(p instanceof Promise, 'has right return type');\n    t.equals(await p, 1, 'method works');\n  } catch (e) {\n    t.fail(e);\n  }\n  t.end();\n});\n\ntest('service - request api with failing request', async t => {\n  const mockCtx: Context = ({\n    headers: {},\n    memoized: new Map(),\n  }: any);\n  const e = new Error('fail');\n  const mockHandlers = {\n    test() {\n      return Promise.reject(e);\n    },\n  };\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:method');\n      t.equal(payload.method, 'test');\n      t.equal(payload.status, 'failure');\n      t.equal(typeof payload.timing, 'number');\n      t.equal(payload.error, e);\n    },\n    from() {\n      return this;\n    },\n  });\n\n  const appCreator = () => {\n    const app = new App('content', el => el);\n    app.register(UniversalEventsToken, mockEmitter);\n    app.register(RPCHandlersToken, mockHandlers);\n    return app;\n  };\n\n  const rpcFactory = getService(appCreator, RPCPlugin);\n  const rpc = rpcFactory.from(mockCtx);\n\n  t.equals(typeof rpc.request, 'function', 'has request method');\n  const p = rpc.request('test', 'test-args');\n  t.ok(p instanceof Promise, 'has right return type');\n  try {\n    await p;\n    t.fail('should throw before this point');\n  } catch (error) {\n    t.equal(error, e);\n  }\n  t.end();\n});\n\ntest('service - request api with invalid endpoint', async t => {\n  const mockCtx: Context = ({\n    headers: {},\n    memoized: new Map(),\n  }: any);\n  const mockHandlers = {};\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:error');\n      t.equal(payload.method, 'test');\n      t.equal(payload.origin, 'server');\n      t.equal(payload.error.message, 'Missing RPC handler for test');\n    },\n    from() {\n      return this;\n    },\n  });\n\n  const appCreator = () => {\n    const app = new App('content', el => el);\n    app.register(UniversalEventsToken, mockEmitter);\n    app.register(RPCHandlersToken, mockHandlers);\n    return app;\n  };\n\n  const rpcFactory = getService(appCreator, RPCPlugin);\n  const rpc = rpcFactory.from(mockCtx);\n\n  t.equals(typeof rpc.request, 'function', 'has request method');\n  const p = rpc.request('test', 'test-args');\n  t.ok(p instanceof Promise, 'has right return type');\n  try {\n    await p;\n    t.fail('should throw before this point');\n  } catch (error) {\n    t.equal(error.message, 'Missing RPC handler for test');\n  }\n  t.end();\n});\n\ntest('FusionJS - middleware resolves', async t => {\n  const app = createTestFixture();\n\n  let wasResolved = false;\n\n  const testPlugin = createPlugin({\n    deps: {rpcFactory: MockPluginToken},\n    middleware: ({rpcFactory}) => {\n      t.ok(rpcFactory);\n      wasResolved = true;\n\n      return async () => {};\n    },\n  });\n  app.register(testPlugin);\n\n  getSimulator(app);\n  t.true(wasResolved, 'middleware was resolved');\n\n  t.end();\n});\n\ntest('middleware - invalid endpoint', async t => {\n  const mockCtx: Context = ({\n    headers: {},\n    prefix: '',\n    path: '/api/valueOf',\n    method: 'POST',\n    body: {},\n    request: {\n      body: {},\n    },\n    memoized: new Map(),\n  }: any);\n  const mockHandlers = {\n    something: () => {},\n    other: () => {},\n  };\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:error');\n      t.equal(payload.method, 'valueOf');\n      t.equal(payload.origin, 'browser');\n      t.equal(\n        payload.error.message,\n        'Missing RPC handler for valueOf',\n        'emits error in payload'\n      );\n    },\n  });\n\n  const middleware =\n    RPCPlugin.middleware &&\n    RPCPlugin.middleware(\n      {\n        emitter: mockEmitter,\n        handlers: mockHandlers,\n      },\n      mockService\n    );\n  if (!middleware) {\n    t.fail();\n    t.end();\n    return;\n  }\n\n  try {\n    await middleware(mockCtx, () => Promise.resolve());\n    // $FlowFixMe\n    t.equal(mockCtx.body.data.message, 'Missing RPC handler for valueOf');\n    // $FlowFixMe\n    t.equal(mockCtx.body.data.code, 'ERR_MISSING_HANDLER');\n    // $FlowFixMe\n    t.equal(mockCtx.body.status, 'failure');\n    t.equal(mockCtx.status, 404);\n  } catch (e) {\n    t.fail(e);\n  }\n  t.end();\n});\n\ntest('middleware - valid endpoint', async t => {\n  const mockCtx: Context = ({\n    headers: {},\n    prefix: '',\n    path: '/api/test',\n    method: 'POST',\n    body: {},\n    request: {\n      body: 'test-args',\n    },\n  }: any);\n  let executedHandler = false;\n  const mockHandlers = {\n    test(args, ctx) {\n      executedHandler = true;\n      t.equal(args, 'test-args');\n      t.equal(ctx, mockCtx);\n      return 1;\n    },\n  };\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:method');\n      t.equal(payload.method, 'test');\n      t.equal(payload.origin, 'browser');\n      t.equal(payload.status, 'success');\n      t.equal(typeof payload.timing, 'number');\n    },\n  });\n\n  const middleware =\n    RPCPlugin.middleware &&\n    RPCPlugin.middleware(\n      {\n        emitter: mockEmitter,\n        handlers: mockHandlers,\n      },\n      mockService\n    );\n  if (!middleware) {\n    t.fail();\n    t.end();\n    return;\n  }\n\n  try {\n    await middleware(mockCtx, async () => {\n      t.equal(executedHandler, false, 'awaits next');\n      Promise.resolve();\n    });\n    t.equal(executedHandler, true);\n    // $FlowFixMe\n    t.equal(mockCtx.body.data, 1);\n    // $FlowFixMe\n    t.equal(mockCtx.body.status, 'success');\n  } catch (e) {\n    t.fail(e);\n  }\n  t.end();\n});\n\ntest('middleware - valid endpoint with route prefix', async t => {\n  const mockCtx: Context = ({\n    headers: {},\n    prefix: '/lol',\n    path: '/api/test',\n    method: 'POST',\n    body: {},\n    request: {\n      body: 'test-args',\n    },\n  }: any);\n  const mockHandlers = {\n    test(args, ctx) {\n      t.equal(args, 'test-args');\n      t.equal(ctx, mockCtx);\n      return 1;\n    },\n  };\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:method');\n      t.equal(payload.method, 'test');\n      t.equal(payload.origin, 'browser');\n      t.equal(payload.status, 'success');\n      t.equal(typeof payload.timing, 'number');\n    },\n  });\n\n  const middleware =\n    RPCPlugin.middleware &&\n    RPCPlugin.middleware(\n      {\n        emitter: mockEmitter,\n        handlers: mockHandlers,\n      },\n      mockService\n    );\n  if (!middleware) {\n    t.fail();\n    t.end();\n    return;\n  }\n\n  try {\n    await middleware(mockCtx, () => Promise.resolve());\n    // $FlowFixMe\n    t.equal(mockCtx.body.data, 1);\n    // $FlowFixMe\n    t.equal(mockCtx.body.status, 'success');\n  } catch (e) {\n    t.fail(e);\n  }\n  t.end();\n});\n\ntest('middleware - valid endpoint failure with ResponseError', async t => {\n  const mockCtx: Context = ({\n    headers: {},\n    prefix: '',\n    path: '/api/test',\n    method: 'POST',\n    body: {},\n    request: {\n      body: 'test-args',\n    },\n    memoized: new Map(),\n  }: any);\n  const e = new ResponseError('Test Failure');\n  // $FlowFixMe\n  e.code = 'ERR_CODE_TEST';\n  // $FlowFixMe\n  e.meta = {hello: 'world'};\n  const mockHandlers = {\n    test() {\n      return Promise.reject(e);\n    },\n  };\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:method');\n      t.equal(payload.method, 'test');\n      t.equal(payload.origin, 'browser');\n      t.equal(payload.status, 'failure');\n      t.equal(typeof payload.timing, 'number');\n      t.equal(payload.error, e);\n    },\n  });\n\n  const middleware =\n    RPCPlugin.middleware &&\n    RPCPlugin.middleware(\n      {\n        emitter: mockEmitter,\n        handlers: mockHandlers,\n      },\n      mockService\n    );\n  if (!middleware) {\n    t.fail();\n    t.end();\n    return;\n  }\n\n  try {\n    await middleware(mockCtx, () => Promise.resolve());\n    // $FlowFixMe\n    t.equal(mockCtx.body.data.message, e.message);\n    // $FlowFixMe\n    t.equal(mockCtx.body.data.code, e.code);\n    // $FlowFixMe\n    t.equal(mockCtx.body.data.meta, e.meta);\n    // $FlowFixMe\n    t.equal(mockCtx.body.status, 'failure');\n    // $FlowFixMe\n    t.equal(Object.keys(mockCtx.body).length, 2);\n    // $FlowFixMe\n    t.equal(Object.keys(mockCtx.body.data).length, 3);\n  } catch (e) {\n    t.fail(e);\n  }\n  t.end();\n});\n\ntest('middleware - valid endpoint failure with standard error', async t => {\n  const mockCtx: Context = ({\n    headers: {},\n    prefix: '',\n    path: '/api/test',\n    method: 'POST',\n    body: {},\n    request: {\n      body: 'test-args',\n    },\n    memoized: new Map(),\n  }: any);\n  const e = new Error('Test Failure');\n  // $FlowFixMe\n  e.code = 'ERR_CODE_TEST';\n  // $FlowFixMe\n  e.meta = {hello: 'world'};\n  const mockHandlers = {\n    test() {\n      return Promise.reject(e);\n    },\n  };\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:method');\n      t.equal(payload.method, 'test');\n      t.equal(payload.origin, 'browser');\n      t.equal(payload.status, 'failure');\n      t.equal(typeof payload.timing, 'number');\n      t.equal(payload.error, e);\n    },\n  });\n\n  const middleware =\n    RPCPlugin.middleware &&\n    RPCPlugin.middleware(\n      {\n        emitter: mockEmitter,\n        handlers: mockHandlers,\n      },\n      mockService\n    );\n  if (!middleware) {\n    t.fail();\n    t.end();\n    return;\n  }\n\n  try {\n    await middleware(mockCtx, () => Promise.resolve());\n    t.equal(\n      // $FlowFixMe\n      mockCtx.body.data.message,\n      'UnknownError - Use ResponseError for more detailed error messages'\n    );\n    // $FlowFixMe\n    t.equal(mockCtx.body.data.code, undefined);\n    // $FlowFixMe\n    t.equal(mockCtx.body.data.meta, undefined);\n    // $FlowFixMe\n    t.equal(mockCtx.body.status, 'failure');\n    // $FlowFixMe\n    t.equal(Object.keys(mockCtx.body).length, 2);\n    // $FlowFixMe\n    t.equal(Object.keys(mockCtx.body.data).length, 3);\n  } catch (e) {\n    t.fail(e);\n  }\n  t.end();\n});\n\ntest('throws when not passed ctx', async t => {\n  const app = createTestFixture();\n\n  t.plan(1);\n  getSimulator(\n    app,\n    createPlugin({\n      deps: {rpcFactory: MockPluginToken},\n      middleware: ({rpcFactory}) => async () => {\n        // $FlowFixMe\n        t.throws(() => rpcFactory.from(), 'missing context throws error');\n        t.end();\n      },\n    })\n  ).request('/');\n});\n\ntest('middleware - bodyparser options with very small jsonLimit', async t => {\n  const mockCtx: Context = ({\n    req: mockRequest(),\n    headers: {},\n    prefix: '/lol',\n    path: '/api/test',\n    method: 'POST',\n    request: {\n      is: mineTypes => mineTypes.some(mineType => mineType.includes('json')),\n    },\n  }: any);\n\n  const mockHandlers = {\n    test(args, ctx) {\n      t.deepEqual(args, MOCK_JSON_PARAMS);\n      t.equal(ctx, mockCtx);\n      return 1;\n    },\n  };\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:method');\n      t.equal(payload.method, 'test');\n      t.equal(payload.origin, 'browser');\n      t.equal(payload.status, 'success');\n      t.equal(typeof payload.timing, 'number');\n    },\n  });\n  const mockBodyParserOptions = {jsonLimit: '1b'};\n\n  const middleware =\n    RPCPlugin.middleware &&\n    RPCPlugin.middleware(\n      {\n        emitter: mockEmitter,\n        handlers: mockHandlers,\n        bodyParserOptions: mockBodyParserOptions,\n      },\n      mockService\n    );\n  if (!middleware) {\n    t.fail();\n    t.end();\n    return;\n  }\n\n  try {\n    await middleware(mockCtx, () => Promise.resolve());\n  } catch (e) {\n    t.equal(e.type, 'entity.too.large');\n  }\n  t.end();\n});\n\ntest('middleware - bodyparser options with default jsonLimit', async t => {\n  const mockCtx: Context = ({\n    req: mockRequest(),\n    headers: {},\n    prefix: '/lol',\n    path: '/api/test',\n    method: 'POST',\n    request: {\n      is: mineTypes => mineTypes.some(mineType => mineType.includes('json')),\n    },\n  }: any);\n\n  const mockHandlers = {\n    test(args, ctx) {\n      t.deepEqual(args, MOCK_JSON_PARAMS);\n      t.equal(ctx, mockCtx);\n      return 1;\n    },\n  };\n  const mockEmitter = createMockEmitter({\n    emit(type, payload) {\n      t.equal(type, 'rpc:method');\n      t.equal(payload.method, 'test');\n      t.equal(payload.origin, 'browser');\n      t.equal(payload.status, 'success');\n      t.equal(typeof payload.timing, 'number');\n    },\n  });\n\n  const middleware =\n    RPCPlugin.middleware &&\n    RPCPlugin.middleware(\n      {\n        emitter: mockEmitter,\n        handlers: mockHandlers,\n      },\n      mockService\n    );\n  if (!middleware) {\n    t.fail();\n    t.end();\n    return;\n  }\n\n  try {\n    await middleware(mockCtx, () => Promise.resolve());\n  } catch (e) {\n    t.fail(e);\n  }\n  t.end();\n});\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport test from 'tape-cup';\n\nimport App, {\n  createPlugin,\n  createToken,\n  type Token,\n  type Context,\n} from 'fusion-core';\nimport {getSimulator} from 'fusion-test-utils';\n\nimport {RPCHandlersToken} from '../tokens';\nimport RPCPlugin from '../mock';\nimport type {RPCServiceType} from '../types.js';\n\nconst MockPluginToken: Token<RPCServiceType> = createToken('test-plugin-token');\nconst mockCtx = (({}: any): Context);\nfunction createTestFixture() {\n  const mockHandlers = {};\n\n  const app = new App('content', el => el);\n  app.register(RPCHandlersToken, mockHandlers);\n  app.register(MockPluginToken, RPCPlugin);\n  return app;\n}\n\ntest('mock with missing handler', async t => {\n  const app = createTestFixture();\n\n  t.plan(1);\n  getSimulator(\n    app,\n    createPlugin({\n      deps: {rpcFactory: MockPluginToken},\n      provides: async deps => {\n        const rpc = deps.rpcFactory.from(mockCtx);\n        try {\n          await rpc.request('test');\n        } catch (e) {\n          t.equal(e.message, 'Missing RPC handler for test');\n        } finally {\n          t.end();\n        }\n      },\n    })\n  );\n});\n\ntest('mock with handler', async t => {\n  const mockHandlers = {\n    test: args => {\n      t.deepLooseEqual(args, {test: 'args'}, 'correct args provded');\n      return 10;\n    },\n  };\n\n  const app = createTestFixture();\n  app.register(RPCHandlersToken, mockHandlers);\n\n  t.plan(2);\n  getSimulator(\n    app,\n    createPlugin({\n      deps: {rpcFactory: MockPluginToken},\n      provides: async deps => {\n        const rpc = deps.rpcFactory.from(mockCtx);\n\n        try {\n          const result = await rpc.request('test', {test: 'args'});\n          t.equal(result, 10, 'correct request result');\n        } catch (e) {\n          t.ifError(e);\n        } finally {\n          t.end();\n        }\n      },\n    })\n  );\n});\n"],"names":["RPCToken","createToken","RPCHandlersToken","BodyParserOptionsToken","MissingHandlerError","Error","constructor","method","code","captureStackTrace","ResponseError","message","meta","statKey","hasHandler","handlers","hasOwnProperty","RPC","emitter","ctx","headers","request","args","startTime","ms","scopedEmitter","from","e","emit","origin","error","result","status","timing","pluginFactory","createPlugin","deps","UniversalEventsToken","bodyParserOptions","optional","provides","service","memoize","middleware","parseBody","bodyparser","next","path","startsWith","match","Promise","resolve","body","data","seconds","ns","process","hrtime","Math","round","plugin","MockPluginToken","MOCK_JSON_PARAMS","test","mockService","getService","app","App","el","register","MockRPCPlugin","createTestFixture","mockHandlers","mockEmitter","MockEmitter","mockEmitterPlugin","RPCPlugin","createMockEmitter","props","setFrequency","teardown","map","on","off","mapEvent","handleEvent","flush","undefined","mockRequest","req","MockReq","url","Accept","write","end","t","wasResolved","getSimulator","rpcFactory","ok","true","throws","mockCtx","memoized","Map","equal","type","payload","appCreator","rpc","equals","p","fail","reject","testPlugin","prefix","something","other","executedHandler","hello","Object","keys","length","plan","is","mineTypes","some","mineType","includes","deepEqual","mockBodyParserOptions","jsonLimit","deepLooseEqual","ifError"],"mappings":"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"}